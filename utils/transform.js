import { INTERNALS } from 'next/dist/server/web/spec-extension/request';


const transform = (input) => {
  console.log('üöÄ ~ file: transform.js ~ line 2 ~ transform ~ input', input);
  let res = [];
  // here we should transform all options to obj entries
  // sort by title
  // sort by sizes or if no sizes - by price
  // group by product
  let temp = [];
  temp = input
    .map((item) => {
      let category = '';
      if (item.options.find(({ key }) => key === '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å')) {
        category = item.options.find(({ key }) => key === '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å').value;
      }
      if (item.options.find(({ key }) => key === '–°–µ—Ä–∏—è')) {
        category = item.options.find(({ key }) => key === '–°–µ—Ä–∏—è').value;
      }
      return {
        category: category,
        title: item.title,
        price: item.cost,
        priceFor: item.unit,
        show: item.visible,
        article: item.article,
        id: item.id,
        coef: item.coef,
        imgs: item.images,
        path: item.path,
      };
    })
    .sort((a, b) => {
      return a.category === b.category ? 0 : a.category < b.category ? -1 : 1;
    })
    .reduce((pre, cur, i) => {
      let preCategory = null;
      if (pre.category) {
        preCategory = pre.category;
      } else if (pre.reverse()[0].category) {
        preCategory = pre[0]?.category;
      }
      if (preCategory === cur.category) {
        if (i === input.length - 1) {
          return res.push(Array.prototype.concat(cur, pre))
        }
        return Array.prototype.concat(cur, pre);
      }
      res.push(pre)
      return cur
    });
};

transform(input = [{
  article: 86818,
  visible: true,
  id: '600526f6b142d7177f664d97',
  title: '–ü–ª–∏—Ç–∞ OSB-3 (–û–°–ü) –¢–∞–ª–∏–æ–Ω (18—Ö1250—Ö2500–º–º)',
  cost: 1300,
  club_cost: 1577,
  options: [ [Object], [Object], [Object], [Object], [Object] ],
  images: [
    'faa996b5-ff8b-4fd1-9f23-078a2cfe4ffc.jpg',
    '433ea715-2637-4dad-85a6-42fe060778df.jpg'
  ],
  path: '/uploads/catalog/5f85ba274a9a5d34e0a45fed/categories/5fb376685225b630baf8471d/600526f6b142d7177f664d97/',
  unit: '–∑–∞ —à—Ç.',
  coef: 1,
  description: '–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ-—Å—Ç—Ä—É–∂–µ—á–Ω–∞—è –ø–ª–∏—Ç–∞ (OSB, –û–°–ü) ‚Äî –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–π –ª–∏—Å—Ç, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–µ—Å—Å–æ–≤–∞–Ω–∏–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–π –ø–ª–æ—Å–∫–æ–π —â–µ–ø—ã –≤ —É—Å–ª–æ–≤–∏—è—Ö –≤—ã—Å–æ–∫–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è –∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã, —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–∫–ª–µ–∏–≤–∞—é—â–µ–π –≤–æ–¥–æ—Å—Ç–æ–π–∫–æ–π —Å–º–æ–ª—ã.'
},
{
  article: 86820,
  visible: true,
  id: '6005270cb142d7177f664dab',
  title: '–ü–ª–∏—Ç–∞ OSB-3 (–û–°–ü) –¢–∞–ª–∏–æ–Ω (9—Ö1250—Ö2500–º–º)',
  cost: 670,
  club_cost: 764,
  options: [ [Object], [Object], [Object], [Object], [Object] ],
  images: [
    '17a02bb0-7878-4210-affa-75ac50e9830d.jpg',
    '9874002b-9b19-4b85-b82c-986ee925a97c.jpg'
  ],
  path: '/uploads/catalog/5f85ba274a9a5d34e0a45fed/categories/5fb376685225b630baf8471d/6005270cb142d7177f664dab/',
  unit: '–∑–∞ —à—Ç.',
  coef: 1,
  description: '–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ-—Å—Ç—Ä—É–∂–µ—á–Ω–∞—è –ø–ª–∏—Ç–∞ (OSB, –û–°–ü) ‚Äî –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–π –ª–∏—Å—Ç, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–µ—Å—Å–æ–≤–∞–Ω–∏–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–π –ø–ª–æ—Å–∫–æ–π —â–µ–ø—ã –≤ —É—Å–ª–æ–≤–∏—è—Ö –≤—ã—Å–æ–∫–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è –∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã, —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–∫–ª–µ–∏–≤–∞—é—â–µ–π –≤–æ–¥–æ—Å—Ç–æ–π–∫–æ–π —Å–º–æ–ª—ã.'
},
{
  article: 88795,
  visible: false,
  id: '6005282eb142d7177f664e12',
  title: '–ü–ª–∏—Ç–∞ OSB-3 (–û–°–ü) –ö–∞–ª–µ–≤–∞–ª–∞ (12x1250x2500–º–º)',
  cost: 845,
  club_cost: 922,
  options: [ [Object], [Object], [Object], [Object], [Object] ],
  images: [
    'b5b48f1e-3063-4802-9b8f-6b5b96a605b9.jpg',
    '76b3199c-27a7-4ac6-9c4e-ffa4e89194f6.jpg'
  ],
  path: '/uploads/catalog/5f85ba274a9a5d34e0a45fed/categories/5fb376685225b630baf84723/6005282eb142d7177f664e12/',
  unit: '–∑–∞ —à—Ç.',
  coef: 1,
  description: 'OSB (–û–°–ü) - –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ-—Å—Ç—Ä—É–∂–µ—á–Ω—ã–µ –ø–ª–∏—Ç—ã, –º–∞—Ç–µ—Ä–∏–∞–ª, –ø–æ–ª—É—á–∞–µ–º—ã–π –ø—Ä–µ—Å—Å–æ–≤–∞–Ω–∏–µ–º –ø–ª–æ—Å–∫–æ–π –¥—Ä–µ–≤–µ—Å–Ω–æ–π —Å—Ç—Ä—É–∂–∫–∏ —Ö–≤–æ–π–Ω—ã—Ö –ø–æ—Ä–æ–¥ –Ω–µ–¥–µ–ª–æ–≤–æ–π –¥—Ä–µ–≤–µ—Å–∏–Ω—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–≤—è–∑—É—é—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ (–≤–æ–¥–æ—Å—Ç–æ–π–∫–∞—è —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∞—è —Å–º–æ–ª–∞).–û—Å–æ–±—É—é –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –ø–ª–∏—Ç—ã –û–°–ü –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –¥–ª—è –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∫—Ä–æ–≤–µ–ª—å–Ω—ã—Ö –∏ —Å—Ç–µ–Ω–æ–≤—ã—Ö —Å—ç–Ω–¥–≤–∏—á-–ø–∞–Ω–µ–ª–µ–π –≤ –∫–∞—Ä–∫–∞—Å–Ω–æ–º –¥–æ–º–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏. –ò—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–∫—Ä–∞—â–∞–µ—Ç —Å—Ä–æ–∫–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –µ–≥–æ —Å –±–æ–ª—å—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é.–û–°–ü –ö–∞–ª–µ–≤–∞–ª–∞ –∏–º–µ—é—Ç —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, —Å–∞–Ω–∏—Ç–∞—Ä–Ω–æ-—ç–ø–∏–¥–µ–º–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –ò–∑–¥–µ–ª–∏—è –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ –∫–ª–∞—Å—Å—É —ç–º–∏—Å—Å–∏–∏ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞–ª—å–¥–µ–≥–∏–¥–∞ –ï1. –í—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –û–°–ü –ö–∞–ª–µ–≤–∞–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–º—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É –ïN-300. –û–°–ü —Å–æ–¥–µ—Ä–∂–∞—Ç –¥–æ 90% –¥—Ä–µ–≤–µ—Å–∏–Ω—ã, –¥–æ–ª—è —Å–≤—è–∑—É—é—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 10% –≤ —Å–æ—Å—Ç–∞–≤–µ –ø–ª–∏—Ç—ã, —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥—Ä–µ–≤–µ—Å–∏–Ω—ã: –ª–µ–≥–∫–æ—Å—Ç—å (–ø–ª–æ—Ç–Ω–æ—Å—Ç—å –û–°–ü ‚Äì –æ–∫–æ–ª–æ 650 –∫–≥/–º3) –∏ –Ω–∏–∑–∫—É—é —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å.–û–°–ü –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è—Ö, –≥–¥–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º –ø–µ—Ä–µ–Ω–æ—Å –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –ø—Ä–æ–¥–æ–ª—å–Ω—ã–µ –æ–ø–æ—Ä—ã ‚Äì –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–ø–∏–ª–∞ –∏ –±–∞–ª–∫–∏.'
},
{
  article: 88800,
  visible: false,
  id: '60052868b142d7177f664e39',
  title: '–ü–ª–∏—Ç–∞ OSB-3 (–û–°–ü) –ö–∞–ª–µ–≤–∞–ª–∞ (9x1250x2500–º–º)',
  cost: 670,
  club_cost: 720,
  options: [ [Object], [Object], [Object], [Object], [Object] ],
  images: [
    'b1fa36c7-2e1f-4f3a-9dad-b510ab671f34.jpg',
    'db8237c5-c7ff-44bd-bb45-065006ae67f3.jpg'
  ],
  path: '/uploads/catalog/5f85ba274a9a5d34e0a45fed/categories/5fb376685225b630baf84723/60052868b142d7177f664e39/',
  unit: '–∑–∞ —à—Ç.',
  coef: 1,
  description: 'OSB (–û–°–ü) - –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ-—Å—Ç—Ä—É–∂–µ—á–Ω—ã–µ –ø–ª–∏—Ç—ã, –º–∞—Ç–µ—Ä–∏–∞–ª, –ø–æ–ª—É—á–∞–µ–º—ã–π –ø—Ä–µ—Å—Å–æ–≤–∞–Ω–∏–µ–º –ø–ª–æ—Å–∫–æ–π –¥—Ä–µ–≤–µ—Å–Ω–æ–π —Å—Ç—Ä—É–∂–∫–∏ —Ö–≤–æ–π–Ω—ã—Ö –ø–æ—Ä–æ–¥ –Ω–µ–¥–µ–ª–æ–≤–æ–π –¥—Ä–µ–≤–µ—Å–∏–Ω—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–≤—è–∑—É—é—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ (–≤–æ–¥–æ—Å—Ç–æ–π–∫–∞—è —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∞—è —Å–º–æ–ª–∞).–û—Å–æ–±—É—é –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –ø–ª–∏—Ç—ã –û–°–ü –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –¥–ª—è –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∫—Ä–æ–≤–µ–ª—å–Ω—ã—Ö –∏ —Å—Ç–µ–Ω–æ–≤—ã—Ö —Å—ç–Ω–¥–≤–∏—á-–ø–∞–Ω–µ–ª–µ–π –≤ –∫–∞—Ä–∫–∞—Å–Ω–æ–º –¥–æ–º–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏. –ò—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–∫—Ä–∞—â–∞–µ—Ç —Å—Ä–æ–∫–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –µ–≥–æ —Å –±–æ–ª—å—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é.–û–°–ü –ö–∞–ª–µ–≤–∞–ª–∞ –∏–º–µ—é—Ç —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, —Å–∞–Ω–∏—Ç–∞—Ä–Ω–æ-—ç–ø–∏–¥–µ–º–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –ò–∑–¥–µ–ª–∏—è –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ –∫–ª–∞—Å—Å—É —ç–º–∏—Å—Å–∏–∏ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞–ª—å–¥–µ–≥–∏–¥–∞ –ï1. –í—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –û–°–ü –ö–∞–ª–µ–≤–∞–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–º—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É –ïN-300. –û–°–ü —Å–æ–¥–µ—Ä–∂–∞—Ç –¥–æ 90% –¥—Ä–µ–≤–µ—Å–∏–Ω—ã, –¥–æ–ª—è —Å–≤—è–∑—É—é—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 10% –≤ —Å–æ—Å—Ç–∞–≤–µ –ø–ª–∏—Ç—ã, —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥—Ä–µ–≤–µ—Å–∏–Ω—ã: –ª–µ–≥–∫–æ—Å—Ç—å (–ø–ª–æ—Ç–Ω–æ—Å—Ç—å –û–°–ü ‚Äì –æ–∫–æ–ª–æ 650 –∫–≥/–º3) –∏ –Ω–∏–∑–∫—É—é —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å.–û–°–ü –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è—Ö, –≥–¥–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º –ø–µ—Ä–µ–Ω–æ—Å –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –ø—Ä–æ–¥–æ–ª—å–Ω—ã–µ –æ–ø–æ—Ä—ã ‚Äì –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–ø–∏–ª–∞ –∏ –±–∞–ª–∫–∏.'
},
{
  article: 94895,
  visible: false,
  id: '6005286fb142d7177f664e3e',
  title: '–ü–ª–∏—Ç–∞ OSB-3 (–û–°–ü) –ö–∞–ª–µ–≤–∞–ª–∞ (15x1250x2500–º–º)',
  cost: 1090,
  club_cost: 1241,
  options: [ [Object], [Object], [Object], [Object], [Object] ],
  images: [
    '5e16c250-18e6-4b0b-b63e-13c89e23450f.jpg',
    'f484234e-153d-47c6-ae57-f4734dc20bcc.jpg'
  ],
  path: '/uploads/catalog/5f85ba274a9a5d34e0a45fed/categories/5fb376685225b630baf84723/6005286fb142d7177f664e3e/',
  unit: '–∑–∞ —à—Ç.',
  coef: 1,
  description: 'OSB (–û–°–ü) - –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ-—Å—Ç—Ä—É–∂–µ—á–Ω—ã–µ –ø–ª–∏—Ç—ã, –º–∞—Ç–µ—Ä–∏–∞–ª, –ø–æ–ª—É—á–∞–µ–º—ã–π –ø—Ä–µ—Å—Å–æ–≤–∞–Ω–∏–µ–º –ø–ª–æ—Å–∫–æ–π –¥—Ä–µ–≤–µ—Å–Ω–æ–π —Å—Ç—Ä—É–∂–∫–∏ —Ö–≤–æ–π–Ω—ã—Ö –ø–æ—Ä–æ–¥ –Ω–µ–¥–µ–ª–æ–≤–æ–π –¥—Ä–µ–≤–µ—Å–∏–Ω—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–≤—è–∑—É—é—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ (–≤–æ–¥–æ—Å—Ç–æ–π–∫–∞—è —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∞—è —Å–º–æ–ª–∞).–û—Å–æ–±—É—é –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –ø–ª–∏—Ç—ã –û–°–ü –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –¥–ª—è –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∫—Ä–æ–≤–µ–ª—å–Ω—ã—Ö –∏ —Å—Ç–µ–Ω–æ–≤—ã—Ö —Å—ç–Ω–¥–≤–∏—á-–ø–∞–Ω–µ–ª–µ–π –≤ –∫–∞—Ä–∫–∞—Å–Ω–æ–º –¥–æ–º–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏. –ò—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–∫—Ä–∞—â–∞–µ—Ç —Å—Ä–æ–∫–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –µ–≥–æ —Å –±–æ–ª—å—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é.–û–°–ü –ö–∞–ª–µ–≤–∞–ª–∞ –∏–º–µ—é—Ç —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, —Å–∞–Ω–∏—Ç–∞—Ä–Ω–æ-—ç–ø–∏–¥–µ–º–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –ò–∑–¥–µ–ª–∏—è –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ –∫–ª–∞—Å—Å—É —ç–º–∏—Å—Å–∏–∏ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞–ª—å–¥–µ–≥–∏–¥–∞ –ï1. –í—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –û–°–ü –ö–∞–ª–µ–≤–∞–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–º—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É –ïN-300. –û–°–ü —Å–æ–¥–µ—Ä–∂–∞—Ç –¥–æ 90% –¥—Ä–µ–≤–µ—Å–∏–Ω—ã, –¥–æ–ª—è —Å–≤—è–∑—É—é—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 10% –≤ —Å–æ—Å—Ç–∞–≤–µ –ø–ª–∏—Ç—ã, —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥—Ä–µ–≤–µ—Å–∏–Ω—ã: –ª–µ–≥–∫–æ—Å—Ç—å (–ø–ª–æ—Ç–Ω–æ—Å—Ç—å –û–°–ü ‚Äì –æ–∫–æ–ª–æ 650 –∫–≥/–º3) –∏ –Ω–∏–∑–∫—É—é —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å.–û–°–ü –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è—Ö, –≥–¥–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º –ø–µ—Ä–µ–Ω–æ—Å –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –ø—Ä–æ–¥–æ–ª—å–Ω—ã–µ –æ–ø–æ—Ä—ã ‚Äì –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–ø–∏–ª–∞ –∏ –±–∞–ª–∫–∏.'
},
{
  article: 94896,
  visible: false,
  id: '6005283db142d7177f664e1e',
  title: '–ü–ª–∏—Ç–∞ OSB-3 (–û–°–ü) –ö–∞–ª–µ–≤–∞–ª–∞ (18x1250x2500–º–º)',
  cost: 1300,
  club_cost: 1486,
  options: [ [Object], [Object], [Object], [Object], [Object] ],
  images: [
    'a7d44152-3412-48bc-9601-bf146f3dcb41.jpg',
    'd8b8ff34-4cbc-4f5a-9811-0c89043c73db.jpg'
  ],
  path: '/uploads/catalog/5f85ba274a9a5d34e0a45fed/categories/5fb376685225b630baf84723/6005283db142d7177f664e1e/',
  unit: '–∑–∞ —à—Ç.',
  coef: 1,
  description: 'OSB (–û–°–ü) - –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ-—Å—Ç—Ä—É–∂–µ—á–Ω—ã–µ –ø–ª–∏—Ç—ã, –º–∞—Ç–µ—Ä–∏–∞–ª, –ø–æ–ª—É—á–∞–µ–º—ã–π –ø—Ä–µ—Å—Å–æ–≤–∞–Ω–∏–µ–º –ø–ª–æ—Å–∫–æ–π –¥—Ä–µ–≤–µ—Å–Ω–æ–π —Å—Ç—Ä—É–∂–∫–∏ —Ö–≤–æ–π–Ω—ã—Ö –ø–æ—Ä–æ–¥ –Ω–µ–¥–µ–ª–æ–≤–æ–π –¥—Ä–µ–≤–µ—Å–∏–Ω—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–≤—è–∑—É—é—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ (–≤–æ–¥–æ—Å—Ç–æ–π–∫–∞—è —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∞—è —Å–º–æ–ª–∞).–û—Å–æ–±—É—é –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –ø–ª–∏—Ç—ã –û–°–ü –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –¥–ª—è –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∫—Ä–æ–≤–µ–ª—å–Ω—ã—Ö –∏ —Å—Ç–µ–Ω–æ–≤—ã—Ö —Å—ç–Ω–¥–≤–∏—á-–ø–∞–Ω–µ–ª–µ–π –≤ –∫–∞—Ä–∫–∞—Å–Ω–æ–º –¥–æ–º–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏. –ò—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–∫—Ä–∞—â–∞–µ—Ç —Å—Ä–æ–∫–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –µ–≥–æ —Å –±–æ–ª—å—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é.–û–°–ü –ö–∞–ª–µ–≤–∞–ª–∞ –∏–º–µ—é—Ç —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, —Å–∞–Ω–∏—Ç–∞—Ä–Ω–æ-—ç–ø–∏–¥–µ–º–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –ò–∑–¥–µ–ª–∏—è –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ –∫–ª–∞—Å—Å—É —ç–º–∏—Å—Å–∏–∏ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞–ª—å–¥–µ–≥–∏–¥–∞ –ï1. –í—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –û–°–ü –ö–∞–ª–µ–≤–∞–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–º—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É –ïN-300. –û–°–ü —Å–æ–¥–µ—Ä–∂–∞—Ç –¥–æ 90% –¥—Ä–µ–≤–µ—Å–∏–Ω—ã, –¥–æ–ª—è —Å–≤—è–∑—É—é—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 10% –≤ —Å–æ—Å—Ç–∞–≤–µ –ø–ª–∏—Ç—ã, —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥—Ä–µ–≤–µ—Å–∏–Ω—ã: –ª–µ–≥–∫–æ—Å—Ç—å (–ø–ª–æ—Ç–Ω–æ—Å—Ç—å –û–°–ü ‚Äì –æ–∫–æ–ª–æ 650 –∫–≥/–º3) –∏ –Ω–∏–∑–∫—É—é —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å.–û–°–ü –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è—Ö, –≥–¥–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º –ø–µ—Ä–µ–Ω–æ—Å –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –ø—Ä–æ–¥–æ–ª—å–Ω—ã–µ –æ–ø–æ—Ä—ã ‚Äì –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–ø–∏–ª–∞ –∏ –±–∞–ª–∫–∏.'
}])

export const plitaosb3ru = (inputArr) => {
  let arr = [];
  return inputArr
    .map((item) => ({
      title: item.options.find(({ key }) => key === '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å').value,
      infos: item.title,
      // sizes: {
      //   a: parseInt(item.options.find(({ key }) => key === '–î–ª–∏–Ω–∞').value.replace(' –º–º', '')),
      //   b: parseInt(item.options.find(({ key }) => key === '–®–∏—Ä–∏–Ω–∞').value.replace(' –º–º', '')),
      //   h: parseInt(item.options.find(({ key }) => key === '–¢–æ–ª—â–∏–Ω–∞').value.replace(' –º–º', '')),
      // },
      prices: item.cost,
      priceFor: item.unit,
      show: item.visible,
      articles: item.article,
      ids: item.id,
      coef: item.coef,
      imgs: item.images,
      paths: item.path,
    }))
    .sort((a, b) => {
      return a.title === b.title ? 0 : a.title < b.title ? -1 : 1;
    })
    .reduce((pre, cur, i) => {
      let preTitle = null;
      if (pre.title) {
        preTitle = pre.title;
      }
      if (pre[0]?.title) {
        preTitle = pre[0]?.title;
      }
      if (cur.title === preTitle) {
        if (i === inputArr.length - 1) {
          arr.push(Array.prototype.concat(cur, pre));
          return arr;
        } else {
          return Array.prototype.concat(cur, pre);
        }
      } else {
        if (pre[0]) {
          arr.push(pre);
        } else {
          arr.push([pre]);
        }
        return cur;
      }
    })
    .map((item) =>
      item
        // .sort((a, b) => a.sizes.h - b.sizes.h || a.sizes.a - b.sizes.a || a.sizes.b - b.sizes.b)
        .reduce(
          (pre, cur) => {
            // pre.sizes.push(cur.sizes);
            pre.infos.push(cur.infos);
            pre.prices.push(cur.prices);
            pre.priceFor.push(cur.priceFor);
            pre.show.push(cur.show);
            pre.articles.push(cur.articles);
            pre.ids.push(cur.ids);
            pre.coef.push(cur.coef);
            pre.imgs.push(cur.imgs);
            pre.paths.push(cur.paths);
            return pre;
          },
          {
            title: item[0].title,
            // sizes: [],
            infos: [],
            prices: [],
            priceFor: [],
            show: [],
            articles: [],
            ids: [],
            coef: [],
            imgs: [],
            paths: [],
          }
        )
    );
  // return inputArr.map((inputArrItem) => {
  //   let tmpSizes = inputArrItem.sizes.map((tmpSizesItem) => {
  //     return tmpSizesItem[0]?.slice(0, tmpSizesItem[0].indexOf('–º–º')).split(/—Ö|x/);
  //   });
  //   let connectionTypes = inputArrItem.sizes.map((tmpSizesItem) => {
  //     return tmpSizesItem[0]?.slice(tmpSizesItem[0].indexOf('(') + 1, tmpSizesItem[0].indexOf(')'));
  //   });
  //   let tmpSizes2 = tmpSizes.map((tmpSizes2Item) => ({
  //     a: parseInt(tmpSizes2Item[0].replace(' ', '')),
  //     b: parseInt(tmpSizes2Item[1].replace(' ', '')),
  //     h: parseInt(tmpSizes2Item[2].replace(' ', '')),
  //   }));
  //   inputArrItem.sizes = tmpSizes2;
  //   inputArrItem.connectionTypes = connectionTypes;
  //   return inputArrItem;
  // });
};
export const belplit24ru = (inputArr) => {
  // console.log("üöÄ ~ file: functions.js ~ line 83 ~ belplit24ru ~ inputArr", inputArr)
  let arr = [];
  return inputArr
    .map((item) => ({
      title: item.options.find(({ key }) => key === '–°–µ—Ä–∏—è').value,
      infos: item.title,
      sizes: {
        a: parseInt(item.options.find(({ key }) => key === '–î–ª–∏–Ω–∞').value.replace(' –º–º', '')),
        b: parseInt(item.options.find(({ key }) => key === '–®–∏—Ä–∏–Ω–∞').value.replace(' –º–º', '')),
        h: parseInt(item.options.find(({ key }) => key === '–¢–æ–ª—â–∏–Ω–∞').value.replace(' –º–º', '')),
      },
      connectionType: item.options.find(({ key }) => key === '–í–∏–¥ –∫—Ä–æ–º–∫–∏').value,
      prices: item.cost,
      priceFor: item.unit,
      density: item.options.find(({ key }) => key === '–ü–ª–æ—Ç–Ω–æ—Å—Ç—å').value,
      show: item.visible,
      articles: item.article,
      ids: item.id,
      coef: item.coef,
      imgs: item.images,
      paths: item.path,
    }))
    .sort((a, b) => {
      return a.title === b.title ? 0 : a.title < b.title ? -1 : 1;
    })
    .reduce((pre, cur, i) => {
      let preTitle = null;
      if (pre.title) {
        preTitle = pre.title;
      }
      if (pre[0]?.title) {
        preTitle = pre[0]?.title;
      }
      if (cur.title === preTitle) {
        if (i === inputArr.length - 1) {
          arr.push(Array.prototype.concat(cur, pre));
          return arr;
        } else {
          return Array.prototype.concat(cur, pre);
        }
      } else {
        if (pre[0]) {
          arr.push(pre);
        } else {
          arr.push([pre]);
        }
        return cur;
      }
    })
    .map((item) =>
      item
        .sort((a, b) => a.sizes.h - b.sizes.h || a.sizes.a - b.sizes.a || a.sizes.b - b.sizes.b)
        .reduce(
          (pre, cur) => {
            pre.infos.push(cur.infos);
            pre.sizes.push(cur.sizes);
            pre.prices.push(cur.prices);
            pre.density.push(cur.density);
            pre.connectionType.push(cur.connectionType);
            pre.priceFor.push(cur.priceFor);
            pre.show.push(cur.show);
            pre.articles.push(cur.articles);
            pre.ids.push(cur.ids);
            pre.coef.push(cur.coef);
            pre.imgs.push(cur.imgs);
            pre.paths.push(cur.paths);
            return pre;
          },
          {
            infos: [],
            title: item[0].title,
            sizes: [],
            prices: [],
            density: [],
            connectionType: [],
            priceFor: [],
            show: [],
            articles: [],
            ids: [],
            coef: [],
            imgs: [],
            paths: [],
          }
        )
    );
  // .reduce((pre, cur, i) => {
  //   let index = null;
  //   let temp = pre.find((item, curI) => {
  //     if (item.name === cur.title.toLowerCase()) {
  //       index = curI;
  //       return true;
  //     }
  //   });
  //   if (temp) {
  //     temp.density = cur.density;
  //     temp.sizesA = cur.sizes;
  //     temp.sizes = cur.sizes.map((item) => `${item.a}x${item.b}x${item.h}–º–º`);
  //     temp.connectionType = cur.connectionType;
  //     temp.prices = [
  //       [
  //         cur.prices,
  //         '—Ä—É–±/–º2',
  //         cur.prices.map((item, i) => {
  //           return item * cur.coef[i];
  //         }),
  //         '—Ä—É–±/—à—Ç',
  //       ],
  //     ];
  //     pre.splice(index, 1, temp);
  //   }
  //   return pre;
  // }, appArr);
};

export const normalizeData2 = (inputArr) => {
  return inputArr.map((inputArrItem) => {
    let tmpSizes = inputArrItem.sizes.map((tmpSizesItem) => {
      return tmpSizesItem[0]?.slice(0, tmpSizesItem[0].indexOf('–º–º')).split(/—Ö|x/);
    });
    let connectionTypes = inputArrItem.sizes.map((tmpSizesItem) => {
      return tmpSizesItem[0]?.slice(tmpSizesItem[0].indexOf('(') + 1, tmpSizesItem[0].indexOf(')'));
    });
    let tmpSizes2 = tmpSizes.map((tmpSizes2Item) => ({
      a: parseInt(tmpSizes2Item[0].replace(' ', '')),
      b: parseInt(tmpSizes2Item[1].replace(' ', '')),
      h: parseInt(tmpSizes2Item[2].replace(' ', '')),
    }));
    inputArrItem.sizes = tmpSizes2;
    inputArrItem.connectionTypes = connectionTypes;
    return inputArrItem;
  });
};
